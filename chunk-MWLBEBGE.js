import{e as m}from"./chunk-MV4XN6CR.js";import{a as l}from"./chunk-T4ITIP7S.js";import{c as b}from"./chunk-QKMSTV2X.js";import{ca as n,ia as c,k as s,t as o}from"./chunk-IB35DNSN.js";var u=class i{http=c(b);snackbar=c(m);baseUrl=`${l.apiUrl}/cart`;cartSubject=new s({items:[],totalPrice:0});isCartLoadingSubject=new s(!0);isCartLoading$=this.isCartLoadingSubject.asObservable();constructor(){this.loadCartFromBackend()}loadCartFromBackend(){this.http.get(this.baseUrl,{withCredentials:!0}).subscribe({next:e=>{let t=e.cart||{items:[],totalPrice:0};this.cartSubject.next(t),this.isCartLoadingSubject.next(!1)},error:()=>{let e={items:[],totalPrice:0};this.cartSubject.next(e),this.isCartLoadingSubject.next(!1)}})}getCartObservable(){return this.cartSubject.asObservable()}addToCart(e){this.http.post(this.baseUrl,e,{withCredentials:!0}).subscribe({next:()=>{let t=this.cartSubject.getValue();t||(t={items:[],totalPrice:0}),t.items=t.items||[];let r=t.items.find(a=>a._id===e._id);r?r.quantity+=e.quantity:t.items.push(e),this.updateTotalPrice(t),this.cartSubject.next(t)},error:()=>{this.snackbar.error("Error adding item to the cart.")}})}removeFromCart(e){this.http.delete(`${this.baseUrl}/${e}`,{withCredentials:!0}).subscribe({next:()=>{let t=this.cartSubject.getValue();t.items=t.items.filter(r=>r._id!==e),this.updateTotalPrice(t),this.cartSubject.next(t)},error:()=>{this.snackbar.error("Error removing item from the cart.")}})}updateQuantity(e,t){this.http.patch(`${this.baseUrl}`,{productId:e,quantity:t},{withCredentials:!0}).subscribe({next:()=>{let r=this.cartSubject.getValue(),a=r.items.find(h=>h._id===e);a&&(a.quantity=+t,this.updateTotalPrice(r),this.cartSubject.next(r))},error:r=>{this.snackbar.error("Error updating item quantity."),console.error(r.message)}})}clearCart(){this.http.delete(this.baseUrl,{withCredentials:!0}).subscribe({next:()=>{this.cartSubject.next({items:[],totalPrice:0})},error:()=>{this.snackbar.error("Error clearing the cart.")}})}updateTotalPrice(e){e.totalPrice=e.items.reduce((t,r)=>t+r.price*r.quantity,0)}resetCartState(){let e={items:[],totalPrice:0};this.cartSubject.next(e)}getTotalQuantityObservable(){return this.cartSubject.asObservable().pipe(o(e=>(e?.items||[]).reduce((r,a)=>r+a.quantity,0)))}static \u0275fac=function(t){return new(t||i)};static \u0275prov=n({token:i,factory:i.\u0275fac,providedIn:"root"})};export{u as a};
